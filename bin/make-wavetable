#!/bin/bash

usage () {
	cat <<USAGE
usage: make-wavetable PATHNAME [WAV]

make-wavetable create a wave table ocillator with PATHNAME. If this is specified WAV
as a path to .wav file, the wave table is initialized with the wave form of it. To read
.wav file this command needs `sox` and some GNU core utility commands.
USAGE
}

if [ ! "$#" -eq 1 ] && [ ! "$#" -eq 2 ] ; then
    usage
    exit 1
fi

OSC_NAME="$1.wavetable"

if [ -e "$OSC_NAME" ] ; then
    echo "Cannot create a wavetable ocillator because '$OSC_NAME' is already exists."
    exit 1
fi

# create ocillator directory
mkdir "$OSC_NAME"

WAV_PATH="$2"
TABLE_PATH="$OSC_NAME/table.tab"
# set wave form to table
if [ "$#" -eq 2 ] ; then
    to-table "$WAV_PATH" > "$OSC_NAME/table.tab"
    echo ' ' >> "$TABLE_PATH"
else
    echo '-1 -1 -1 -1 1 1 1 1 ' > "$OSC_NAME/table.tab"
fi

# calculate the phase oscillator frequency (f)
# to play wav file at normal speed, the oscillator's period (n sec) must satisfy this expression:
#
#   n : table_len / n = 1 : sample_rate
#
# this says that the phase oscillator progress `n` sec, the pointer in wave form progress `table_len / n`,
# and, to play wave form at normal speed, this ratio must be `1 : sample_rate`
# (if at twice of normal speed, the ratio should be `1 : 2 * sample_rate`)
# so the n is `table_len / (2 * sample_rate)`.
# frequency is n's reciprocal, thus f is `(2 * sample_rate) / table_len`.
TABLE_LEN="$(cat $TABLE_PATH | wc -w)"
PHASE_FREQ="$(echo \"10 k 44100.0 2 * $TABLE_LEN / p\" | dc)"

# create phase signal
PHASE_PATH="ph.phase/osc.saw"
mkdir -p "$OSC_NAME/$PHASE_PATH/"

echo "$PHASE_FREQ" > "$OSC_NAME/$PHASE_PATH/freq.val"
echo 0 > "$OSC_NAME/$PHASE_PATH/init_ph.val"
